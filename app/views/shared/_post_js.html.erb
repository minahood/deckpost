<script type="text/javascript">

$("#micropost_image").bind("change", function() {
  var size_in_megabytes = this.files[0].size/1024/1024;
  if (size_in_megabytes > 15) {
    alert("15MB以上の画像はアップロードできません。");
    $("#micropost_image").val("");
  }
});

var recaptchaCallbackFunction = function() { //コールバック関数の定義
  $("#p_form_btn").prop("disabled", false);
};



$(function(){
  //querySelectorでfile_fieldを取得
  var file_field = document.querySelector('input[type=file]')
  //fileが選択された時に発火するイベント
  $('.img-file-1').change(function(){
    //選択したfileのオブジェクトをpropで取得
    var file = $('input[type="file"]').prop('files')[0];
    //FileReaderのreadAsDataURLで指定したFileオブジェクトを読み込む
    var fileReader = new FileReader();
    //読み込みが完了すると、srcにfileのURLを格納
    fileReader.onloadend = function() {
      var src = fileReader.result
      var html= 
      `
      <div>
        <div>
          
          <img src="${src}" class="rounded border post-img" id="img-1">
          <div class="img-delete d-inline" id="img-delete-1">
            <i class="fas fa-times-circle"></i>
          </div>
        </div>
      </div>
      `
      
      var target_image = $('#img-delete-1').parent().parent()
      target_image.remove();
      //要素の前にhtmlを差し込む
      $('div#image-1').before(html);
      $('#form-img-2').removeClass("d-none");
      
    }
    fileReader.readAsDataURL(file);
  });
  
  $('.img-file-2').change(function(){
    //選択したfileのオブジェクトをpropで取得
    var file = $('input[type="file"].img-file-2').prop('files')[0];
    //FileReaderのreadAsDataURLで指定したFileオブジェクトを読み込む
    var fileReader = new FileReader();
    //読み込みが完了すると、srcにfileのURLを格納
    fileReader.onloadend = function() {
      var src = fileReader.result
      var html= 
      `
      <div>
        <div>
          <img src="${src}" class="rounded border post-img" id="img-2">
          <div class="img-delete d-inline" id="img-delete-2">
            <i class="fas fa-times-circle"></i>
          </div>  
        </div>
      </div>
      `
      
      var target_image = $('#img-delete-2').parent().parent()
      target_image.remove();
      //要素の前にhtmlを差し込む
      $('div#image-2').before(html);
    }
    fileReader.readAsDataURL(file);
  });
  
  $(document).on("click", '#img-delete-1', function(){
  //プレビュー要素を取得
  var target_image = $(this).parent().parent()
  //プレビューを削除
  target_image.remove();
  //inputタグに入ったファイルを削除
  $('input[type=file].img-file-1').val('');
  })
  
  $(document).on("click", '#img-delete-2', function(){
  //プレビュー要素を取得
  var target_image = $(this).parent().parent()
  //プレビューを削除
  target_image.remove();
  //inputタグに入ったファイルを削除
  $('input[type=file].img-file-2').val('');
  })
});




// jquery書きはじめ
$(function (){
  // 処理（ページが読み込まれた時、フォームに残り何文字入力できるかを数えて表示する）

  //フォームに入力されている文字数を数える
  //\nは"改行"に変換して2文字にする。オプションフラグgで文字列の最後まで\nを探し変換する
  var count = $(".js-textarea_count").text().replace(/\n/g, "改行").length;
  //残りの入力できる文字数を計算
  count_max = 1000
  
  var now_count = count_max - count;
  //文字数がオーバーしていたら文字色を赤にする
  if (count > count_max) {
    $(".js-textarea_counter").css("color","red");
  }
  //残りの入力できる文字数を表示
  $(".js-textarea_counter").text( "残り" + now_count + "文字");

  $(".js-textarea_count").on("keyup", function() {
    // 処理（キーボードを押した時、フォームに残り何文字入力できるかを数えて表示する）
    //フォームのvalueの文字数を数える
    var count = $(this).val().replace(/\n/g, "改行").length;
    var now_count = count_max - count;

    if (count > count_max) {
      $(".js-textarea_counter").css("color","red");
    } else {
      $(".js-textarea_counter").css("color","gray");
    }
    $(".js-textarea_counter").text( "残り" + now_count + "文字");
  });
  
  var $textarea = $('#textarea');
  var lineHeight = parseInt($textarea.css('lineHeight'));
  $textarea.on('input', function(e) {
    var lines = ($(this).val() + '\n').match(/\n/g).length;
    $(this).height(lineHeight * lines);
  });

});


</script>


